{%- set mediawiki = salt['pillar.get']('mediawiki', {}) -%}
<?php
# This file is automatically generated by Salt.
# Any changes done here will be overwritten.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
#------------------
# Default Settings
#------------------
if ( !defined( 'MEDIAWIKI' ) ) {
  exit;
}

$wgSitename = "{{ site }}";

$wgScriptPath = "";
$wgScriptExtension = ".php";

$wgServer = "{{ site_items.get('Server', '') }}";

$wgResourceBasePath = $wgScriptPath;

$wgLogo = "{{ site_items.get('Logo', '$wgResourceBasePath/resources/assets/wiki.png') }}";

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "{{ site_items.get('EmergencyContact', '') }}";
$wgPasswordSender = "{{ site_items.get('PasswordSender', '') }}";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

#-------------------
# Database Settings
#-------------------
$wgDBtype = "{{ site_items.get('DBtype', '') }}";
$wgDBserver = "{{ site_items.get('DBserver', '') }}";
$wgDBname = "{{ site_items.get('DBname', '') }}";
$wgDBuser = "{{ site_items.get('DBuser', '') }}";
$wgDBpassword = "{{ site_items.get('DBpassword', '') }}";

{%- if site_items.get('DBtype') == 'mysql' %}
# MySQL specific settings
$wgDBprefix = "";
# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";
# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;
{%- endif %}

#----------------
# Cache Settings
#----------------
$wgMainCacheType = {{ site_items.get('CacheType', 'CACHE_ACCEL') }};
{% if site_items.get('CacheType') == 'CACHE_MEMCACHED' %}
$wgMemCachedServers = {{ site_items.get('MemCachedServers', '') }};
{% endif %}

#-----------------
# Upload Settings
#-----------------
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## Configure file extension types
$wgFileExtensions = array(
  'png','gif','jpg','jpeg','doc','xls','pdf','docx','xlsx','pptx','ps','odt','ods','odp','odg','php','md','csv','vsdx','xml','txt','json'
);

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

#--------------------
# Telemetry Settings
#--------------------
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "f7043c11f2b7af9566d47767cc8f6aeafa7d257a5abc7e55a4d4b397e684d4b9";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "e3f3c84ae6f2db35";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

#-------
# Skins
#-------
# Default skin
$wgDefaultSkin = "vector";

# Loaded Skins
{%- for skin in site_items.get('skins') %}
wfLoadSkin( '{{ skin }}' );
{%- endfor %}

#-----------------
# Enabled Plugins
#-----------------
{%- for plugin in site_items.get('plugins') %}
wfLoadExtension( '{{ plugin }}' );
{%- endfor %}

#---------------------------
# Group Permission Settings
#---------------------------
{%- for permission, permission_items in site_items.get('GroupPermissions', {}).items() %}
$wgGroupPermissions['{{ permission_items.user }}']['{{ permission }}'] = {{ permission_items.enable }};
{%- endfor %}

#---------
# Logging
#---------
$wgDebugLogFile = "/var/log/mediawiki/{{ site }}-debug.log";

## Session Expiry
$wgSessionInObjetCache = true;
$wgObjectCacheSessionExpiry = 28800;

##------------
## Extensions
##------------

{%- for plugin, plugin_items in site_items.get('plugins', {}).items() %}
{%- if plugin_items.settings is defined %}
###---------------
### {{ plugin }}
###--------------
{%- for key, value in plugin_items.settings.items() %}
{%- if "array" in value|string or value|int %}
$wg{{ key }} = {{ value|string }};
{%- else %}
$wg{{ key }} = "{{ value|string }}";
{%- endif %}
{%- endfor %}
{%- endif %}
{%- endfor %}
